// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int    @id @default(autoincrement())
  username String
  email    String @unique
  password String
  Transcript Transcript[]
}

model Transcript {
  id       Int     @id @default(autoincrement())
  user     User    @relation(fields: [userId], references: [id])
  userId   Int
  fileUrl  String
  text     String?
  createdAt DateTime @default(now())
}
// enum TransactionType {
//   INCOME
//   EXPENSE
// }

// generator client {
//   provider = "prisma-client-js"
// }

// datasource db {
//   provider = "mysql"
//   url      = env("DATABASE_URL") // Configure dans .env
// }

// model User {
//   id       Int      @id @default(autoincrement())
//   name     String
//   email    String   @unique
//   password String
//   wallets  Wallet[]
// }


// enum TransactionType {
//   INCOME
//   EXPENSE
// }
// model Wallet {
//   id         Int        @id @default(autoincrement())
//   user       User       @relation(fields: [userId], references: [id])
//   userId     Int
//   name       String
//   total      Float      @default(0)
//   parent     Wallet?    @relation("SubWallets", fields: [parentWalletId], references: [id])
//   parentWalletId Int?
//   subWallets Wallet[]   @relation("SubWallets")
//   transactions Transaction[]
// }

// model Transaction {
//   id          Int       @id @default(autoincrement())
//   wallet      Wallet    @relation(fields: [walletId], references: [id])
//   walletId    Int
//   amount      Float
//   type        TransactionType
//   description String?
//   createdAt   DateTime  @default(now())
// }
